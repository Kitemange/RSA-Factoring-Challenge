#!/usr/bin/env bash
#RSA factoring challenge

check_factor()
{
	if [ $# -ne 3 ]; # if the number of arguments is not equal to 3
	then
		args=("$@") # expand all the arguments i.e "$1", "$2", ...
		count=0
		num2=1
		for a in ${args[*]}; # An array of all the arguments ie args[0], args[1], ...
		do
			if [ $count -gt 1 ]; # if $count is greater than 1
			then
				num2=$(echo $a*$num2 | bc) # bc provides the functionality of a scientific calculator ie make the *(multiplication) possible
			fi # ends the inner if statement
			count=$((count + 1))
		done #ends the do loop
	else
		num2=$3 #contains a third argument
	fi
	
	num1=$2
	num=$(echo "$1" | tr ':' '=') #tr-translates ':' to '='

	result=$(echo "if($num2 > $num1) 1 else 0" | bc)
		if ((result == 1));
		then
			numcp=$num1
			num1=$num2
			num2=$numcp
		fi

	echo "$num$num1*$num2"
}

if [ $# -ne 1 ]
then
	echo 'Usage: factors <file>'
	exit 1
else
	while read i
	do
		result=$(factor "$i") #factor - used to print prime factor of the given numbers ie factor [NUMBER]
		check_factor $result
	done < "$1" # < - redirection applied to the whole while loop
fi
